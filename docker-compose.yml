version: '3.8'

networks:
  hbswap:

volumes:
  mpc-bytecodes:
  mpc-schedules:
  inputmaskshares-p0:
  inputmaskshares-p1:
  inputmaskshares-p2:
  inputmaskshares-p3:
  ppdata-p0:
  ppdata-p1:
  ppdata-p2:
  ppdata-p3:
  persistence-p0:
  persistence-p1:
  persistence-p2:
  persistence-p3:
  db-p0:
  db-p1:
  db-p2:
  db-p3:

services:

  ethnode:
    image: ethereum/client-go:latest
    environment:
      POADIR: /opt/poa
      DATADIR: /opt/poa/data
      KEYSTORE: /opt/poa/keystore/server_0
      #networks:
      #  - hbswap
    ports:
      - "8545:8545"
      - "8546:8546"
    volumes:
      - ./scripts/chain-latest.sh:/usr/src/chain-latest.sh
      - ./poa:/opt/poa
    working_dir: /usr/src/
    entrypoint: ""
    command: sh chain-latest.sh

  deploycontract:
    image: hbswap-go
    build:
      context: .
      dockerfile: Dockerfile
      target: go-deps
    environment:
      #POADIR: /opt/poa
      POA_KEYSTORE: /opt/poa/keystore
      #networks:
      #  - hbswap
    working_dir: /go/src/github.com/initc3/HoneyBadgerSwap/src/go
    volumes:
      - ./poa/keystore:/opt/poa/keystore
      - ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
      - ./src:/go/src/github.com/initc3/HoneyBadgerSwap/src
    entrypoint: ""
    command: ["wait-for-it", "ethnode:8545", "--", "go", "run", "deploy/deploy.go", "ethnode"]

  # compile MPC programs (hbswap_init, hbswap_trade_prep, hbswap_trade)
  # see scripts/compile.sh for details
  mpc.compile:
    #image: sbellem/mpspdz:compiler
    image: sbellem/hbswapmpcbytecodes
    networks:
      - hbswap
    volumes:
      #- ./src/mpc:/usr/src/Programs/Source
      #- ./scripts/compile.sh:/usr/src/compile.sh
      - mpc-bytecodes:/usr/src/Programs/Bytecode
      - mpc-schedules:/usr/src/Programs/Schedules
    #working_dir: /usr/src
    #command: ["bash", "compile.sh"]

  mpcnode0:
    #image: hbswap
    image: sbellem/hbswap
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POA_KEYSTORE: /opt/poa/keystore
    ports:
      - 58080:8080
    networks:
      - hbswap
    volumes:
      - mpc-bytecodes:/usr/src/hbswap/Programs/Bytecode
      - mpc-schedules:/usr/src/hbswap/Programs/Schedules
        #- ./conf/server.toml:/opt/hbswap/conf/server.toml
        #- ./scripts/mpc-node.sh:/usr/src/hbswap/mpc-node.sh
        #- ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
        #- ./src:/go/src/github.com/initc3/HoneyBadgerSwap/src
        #- ./poa/keystore:/opt/poa/keystore
        #- inputmaskshares-p0:/opt/hbswap/inputmask-shares
        #- ppdata-p0:/opt/hbswap/preprocessing-data
        #- persistence-p0:/usr/src/hbswap/Persistence
    secrets:
      - P0.key
    working_dir: /usr/src/hbswap
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpcnode0"
    command: ["wait-for-it", "ethnode:8545", "--", "bash", "mpc-node.sh", "0", "ethnode", "mpcnode0"]

  mpcnode1:
    #image: hbswap
    image: sbellem/hbswap
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POA_KEYSTORE: /opt/poa/keystore
    ports:
      - 58081:8080
    networks:
      - hbswap
    volumes:
      - mpc-bytecodes:/usr/src/hbswap/Programs/Bytecode
      - mpc-schedules:/usr/src/hbswap/Programs/Schedules
        #- ./conf/server.toml:/opt/hbswap/conf/server.toml
        #- ./scripts/mpc-node.sh:/usr/src/hbswap/mpc-node.sh
        #- ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
        #- ./src:/go/src/github.com/initc3/HoneyBadgerSwap/src
        #- ./poa/keystore:/opt/poa/keystore
    secrets:
      - P1.key
    working_dir: /usr/src/hbswap
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpcnode0"
    command: ["wait-for-it", "ethnode:8545", "--", "bash", "mpc-node.sh", "1", "ethnode", "mpcnode0"]

  mpcnode2:
    #image: hbswap
    image: sbellem/hbswap
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POA_KEYSTORE: /opt/poa/keystore
    ports:
      - 58082:8080
    networks:
      - hbswap
    volumes:
      - mpc-bytecodes:/usr/src/hbswap/Programs/Bytecode
      - mpc-schedules:/usr/src/hbswap/Programs/Schedules
        #- ./conf/server.toml:/opt/hbswap/conf/server.toml
        #- ./scripts/mpc-node.sh:/usr/src/hbswap/mpc-node.sh
        #- ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
        #- ./src:/go/src/github.com/initc3/HoneyBadgerSwap/src
        #- ./poa/keystore:/opt/poa/keystore
    secrets:
      - P2.key
    working_dir: /usr/src/hbswap
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpcnode0"
    command: ["wait-for-it", "ethnode:8545", "--", "bash", "mpc-node.sh", "2", "ethnode", "mpcnode0"]

  mpcnode3:
    #image: hbswap
    image: sbellem/hbswap
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      POA_KEYSTORE: /opt/poa/keystore
    ports:
      - 58083:8080
    networks:
      - hbswap
    volumes:
      - mpc-bytecodes:/usr/src/hbswap/Programs/Bytecode
      - mpc-schedules:/usr/src/hbswap/Programs/Schedules
        #- ./conf/server.toml:/opt/hbswap/conf/server.toml
        #- ./scripts/mpc-node.sh:/usr/src/hbswap/mpc-node.sh
        #- ./scripts/wait-for-it.sh:/usr/local/bin/wait-for-it
        #- ./src:/go/src/github.com/initc3/HoneyBadgerSwap/src
        #- ./poa/keystore:/opt/poa/keystore
    secrets:
      - P3.key
    working_dir: /usr/src/hbswap
    # NOTE IMPORTANT!
    # The hostname (2nd arg) must be the one of player 0, i.e. "mpcnode0"
    command: ["wait-for-it", "ethnode:8545", "--", "bash", "mpc-node.sh", "3", "ethnode", "mpcnode0"]

secrets:
   P0.key:
     file: testkeys/secret/P0.key
   P1.key:
     file: testkeys/secret/P1.key
   P2.key:
     file: testkeys/secret/P2.key
   P3.key:
     file: testkeys/secret/P3.key
