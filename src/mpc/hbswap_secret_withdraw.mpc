n = 4

def read_sint(idx):
    start = regint(idx * 32)
    end = regint()
    share = sint()
    readsharesfromfile(start, end, share)
    return share

def read_sfix(idx):
    return sfix._new(read_sint(idx))

def public_reveal(x):
    for i in range(n):
        x.reveal_to(i)

def main():
    balance = read_sfix(0)
    print_ln('balance %s', balance.reveal())
    amt = read_sfix(1)
    print_ln('amt %s', amt.reveal())
    enough = balance >= amt
    print_ln('enough %s', enough.reveal())
    public_reveal(enough)

main()
