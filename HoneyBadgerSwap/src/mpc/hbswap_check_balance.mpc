def read_sint(idx):
    start = regint(idx * 32)
    end = regint()
    masked_value = sint()
    readsharesfromfile(start, end, masked_value)
    return masked_value

def sint_to_sfix(x):
    return sfix._new(x)

def main():
    balance = sint_to_sfix(read_sint(0))
    amt = sint_to_sfix(read_sint(1))
    print_ln('balance %s amt %s', balance.reveal(), amt.reveal())

    enough_balance = balance >= amt
    print_ln('enough_balance %s', enough_balance.reveal())

    for i in range(4):
        enough_balance.reveal_to(i)

main()
